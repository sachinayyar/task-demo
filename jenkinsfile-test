pipeline {
    agent {
        kubernetes{
            label 'java21'
            defaultContainer 'jnlp'
        }
    }
    environment {
        SONARQUBE_SERVER = 'sonar'  
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-cred')  
        IMAGE_NAME = 'ayyarsachin/simpleproj'
    }
    stages {
        stage('checkout') {
            steps {
                checkout scm
            }
        }         
        stage('Maven Build') {
            steps {
            sh '''
                mvn -version
                mvn clean install
            '''
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {  
                    sh 'mvn sonar:sonar' 
                }
            }
        }
        stage('Build Image') {
            steps {
                sh '''
                buildah --version
                buildah --storage-driver=overlay bud -t ${IMAGE_NAME}:${BUILD_NUMBER} .

                '''
            }
        }

        stage('Login and Push Image') {
            steps {
                sh '''
                echo $DOCKERHUB_CREDENTIALS_PSW | buildah login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin docker.io
                buildah push --storage-driver=overlay ${IMAGE_NAME}:${BUILD_NUMBER} docker://docker.io/${IMAGE_NAME}:${BUILD_NUMBER}
                buildah rmi ${IMAGE_NAME}:${BUILD_NUMBER}
                '''
            }
        }
        stage('Deployment in staging environment') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-cred', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh '''
                        set -e
                        git config --global user.email "ayyarsachin@gmail.com"
                        git config --global user.name "$USERNAME"
                        
                        echo "Removing any old cloned repo"
                        rm -rf task-demo
                        
                        echo "Cloning GitHub repository"
                        git clone -b staging https://$USERNAME:$PASSWORD@github.com/sachinayyar/task-demo.git
                        cd task-demo
        
                        echo "Updating image tag in Deployment.yaml"
                        sed -i "s|image: ayyarsachin/sampleproj:[^[:space:]]*|image: ayyarsachin/sampleproj:${BUILD_NUMBER}|" Deployment.yaml
        
                        echo "Verifying updated Deployment.yaml"
                        cat Deployment.yaml
        
                        git add Deployment.yaml
                        git commit -m "Update image tag to build ${BUILD_NUMBER}"
                        git push https://$USERNAME:$PASSWORD@github.com/sachinayyar/task-demo.git
                        '''
                    }
                }
            }
        }
    }
}
